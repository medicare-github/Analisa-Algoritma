package margesort;
import java.io.*;
import java.util.*;
public class MargeSort {
    public static void main(String[] args) {
        //Nomor yang akan di urutkan
        BufferedReader Tester = null;
        ArrayList<Integer> daftar = new ArrayList<>();
        try {
            String line;
            Tester = new BufferedReader(new FileReader("E://TUGAS PAK ASRIL//Tugas4//random.csv"));
            while ((line = Tester.readLine()) != null) {
                daftar.add(Integer.parseInt(line));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        System.out.println("Sebelum Diurutkan data_tes");
        System.out.println(daftar);
        int data_tes[] = new int[daftar.size()];
        for (int i = 0; i < daftar.size(); i++) {
            data_tes[i] = daftar.get(i);
        }
        System.out.println("=======================================================================");        
        System.out.println();

        prosesmergesort(data_tes, 0, data_tes.length - 1);
        System.out.println();
        System.out.println("Setelah di Urutkan = ");
        for (int i = 0; i < data_tes.length; i++) {
            System.out.print(data_tes[i] + " ");
        }

    }

    public static void prosesmergesort(int data_tes[], int l, int h) {
        int rendah = l;
        int tinggi = h;
        if (rendah >= tinggi) {
            return;
        }
        int tengah = (rendah + tinggi) / 2;
        prosesmergesort(data_tes, rendah, tengah);
        prosesmergesort(data_tes, tengah + 1, tinggi);
        int end_rendah = tengah;
        int start_tinggi = tengah + 1;
        while ((l <= end_rendah) && (start_tinggi <= tinggi)) {
            if (data_tes[rendah] < data_tes[start_tinggi]) {
                rendah++;
            } else {
                int tampungan = data_tes[start_tinggi];
                for (int z = start_tinggi - 1; z >= rendah; z--) {
                    data_tes[z + 1] = data_tes[z];
                }
                data_tes[rendah] = tampungan;
                rendah++;
                end_rendah++;
                start_tinggi++;
            }
        }
    }

}
